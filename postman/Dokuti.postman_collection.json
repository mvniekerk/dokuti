{
	"info": {
		"_postman_id": "b8027f9e-5284-4a54-b294-78357e848792",
		"name": "Dokuti - Documentation Collection",
		"description": "Postman collection for interacting with the dokuti service, a general purpose utility document store.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "favourite-feature",
			"item": [
				{
					"name": "Get Key Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Create Document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"document2Id\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Favourite Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9310d03-5fa6-40a0-8007-c3a502f4f7af",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/favourite",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"favourite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Favourite Document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "076871c1-48c9-46de-a38e-a0a67358e137",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/favourite",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"favourite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b9495f9-0b82-4c00-9ce3-8fca57c287a1",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get favourite documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a34fcb1-f7a9-472a-bd91-49a3abcb1042",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterByFavourites=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterByFavourites",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfavourite document 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d3038b5-3bfc-4a1d-aa7e-754eae8d630d",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/unfavourite",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"unfavourite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfavourite Document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "076871c1-48c9-46de-a38e-a0a67358e137",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/unfavourite",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"unfavourite"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "407a126c-f575-4971-a9c6-75cf01b04dba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a46a96cf-a189-47a5-8fb9-fffdac7435f9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "archive-feature",
			"item": [
				{
					"name": "Get Key Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"document2Id\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Create Document 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Unarchive document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f61c5c1-e865-4f17-b14e-9b6de174e6eb",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"isArchived is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('isArchived');",
									"    pm.expect(jsonData.isArchived).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/unarchive",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"unarchive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unarchive document 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07880b7a-0bd2-44df-9f33-7a91104e5f78",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"isArchived is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('isArchived');",
									"    pm.expect(jsonData.isArchived).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/unarchive",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"unarchive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88fbcfe9-ee31-4761-9454-ad041f59fc4e",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Only documents\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"     }",
									"     pm.expect(non_arch).to.equal(jsonArray.length);",
									"     pm.expect(arch).to.equal(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all archives",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b6c419-6921-4b3d-a530-7e679051eb79",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only archives\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"         ",
									"     }",
									"     pm.expect(arch).to.equal(jsonArray.length);",
									"     pm.expect(non_arch).to.equal(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterArchive=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterArchive",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive document 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db4bcad9-cc44-4449-a83f-003166ec33f8",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"isArchived is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('isArchived');",
									"    pm.expect(jsonData.isArchived).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/archive",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ded8cb0b-df6d-42cb-905b-7e671feeaa2b",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only documents\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"     }",
									"     pm.expect(non_arch).to.equal(jsonArray.length);",
									"     pm.expect(arch).to.equal(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterArchive=false",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterArchive",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all archives",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a812297d-b34d-4ca7-8fb8-9397e45d9112",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only archives\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"         ",
									"     }",
									"     pm.expect(arch).to.equal(jsonArray.length);",
									"     pm.expect(non_arch).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterArchive=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterArchive",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8976f59e-8a81-401d-87fa-424af7951f7c",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"isArchived is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('isArchived');",
									"    pm.expect(jsonData.isArchived).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/archive",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all archives",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0307b27-c4e0-442d-a030-f24741e2d2fa",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only archives\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"         ",
									"     }",
									"     pm.expect(arch).to.equal(jsonArray.length);",
									"     pm.expect(non_arch).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterArchive=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterArchive",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05309bfe-036d-45c9-9b2a-e2e9e7eb3ec4",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only documents\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"     }",
									"     pm.expect(non_arch).to.equal(jsonArray.length);",
									"     pm.expect(arch).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unarchive document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a821b1c-3a8e-4d93-9ea4-54881720411d",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"isArchived is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('isArchived');",
									"    pm.expect(jsonData.isArchived).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/unarchive",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"unarchive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5b4eb7d-8a9b-4ef9-a9c8-495f8e29b768",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Only documents\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"     }",
									"     pm.expect(non_arch).to.equal(jsonArray.length);",
									"     pm.expect(arch).to.equal(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all archives",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d13c545-4560-4c37-9283-56f66c0cebdf",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only archives\", function () {",
									"     jsonArray = pm.response.json();",
									"     var arch = 0",
									"     var non_arch = 0;",
									"     for(var i=0; i<jsonArray.length; i++) {",
									"        if (jsonArray[i].isArchived) arch++;",
									"        else non_arch++;",
									"         ",
									"     }",
									"     pm.expect(arch).to.equal(jsonArray.length);",
									"     pm.expect(non_arch).to.equal(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterArchive=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterArchive",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8bb4ff14-647f-4905-b41a-9cfe556b31f8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0987d1ad-ec00-4d05-bf95-66c258dca28c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tag-feature",
			"item": [
				{
					"name": "Get Key Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 2 ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"document2Id\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Create Document 1 ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Delete all tags from the document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c31eb20-3c1a-4854-9b06-e21f132f9737",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all tags from the document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c31eb20-3c1a-4854-9b06-e21f132f9737",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04e2c9af-e042-480c-9dec-876c9100ced2",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Documnet exists without any tags\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('tags');",
									"    pm.expect(0).to.equal(jsonData.tags.length);",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add tags to the document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aa81c35-597e-485f-be77-5734420db3a1",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"testtag1\"\n  },\n  {\n    \"tag\": \"testtag2\"\n  },\n  {\n    \"tag\": \"testtag3\"\n  },\n  {\n    \"tag\": \"testtag4\"\n  }\n  \n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Document again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "684b211c-f14c-496b-a2ba-e8e787b0be12",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Documnet exists without any tags\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('tags');",
									"    pm.expect(4).to.equal(jsonData.tags.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search document by tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "918499e9-2b05-4dcb-9986-7349166a9d7b",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags=testtag4",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "testtag4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search document by non-existing tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d34059-6180-4495-86f8-964317cf2b93",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags=dummmmmy_tag",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "dummmmmy_tag"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search document by two tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550a8c81-aad9-4156-b527-2a09c423fc6e",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags=testtag4,testtag2",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "testtag4,testtag2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search documnet by real and non-real tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ab46851-501a-4148-897d-6f785f6b9db5",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags=testtag4,dummmmy",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "testtag4,dummmmy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add tags to the document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aa81c35-597e-485f-be77-5734420db3a1",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"testtag2\"\n  },\n  {\n    \"tag\": \"testtag3\"\n  }\n\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search documents by common tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86e23dee-8158-4e22-8791-c0e290b159f0",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags=testtag2,testtag3",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "testtag2,testtag3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search documents by non-common tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86e23dee-8158-4e22-8791-c0e290b159f0",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags=testtag1,testtag3",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "testtag1,testtag3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add empty tags to the document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aa81c35-597e-485f-be77-5734420db3a1",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n \n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get document 2 again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c71e649-0712-4a9c-85f9-34e4974a7397",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Documnet exists without any tags\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('tags');",
									"    pm.expect(2).to.equal(jsonData.tags.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add the same tags to the document 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aa81c35-597e-485f-be77-5734420db3a1",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"testtag2\"\n  },\n  {\n    \"tag\": \"testtag3\"\n  }\n\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get document 2 again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c71e649-0712-4a9c-85f9-34e4974a7397",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Documnet exists without any tags\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('tags');",
									"    pm.expect(2).to.equal(jsonData.tags.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{document2Id}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{document2Id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "461beef1-5396-4dff-ae2d-71737bdff6ff",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d5882289-5605-422f-aca8-b63bd0916344",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "basic",
			"item": [
				{
					"name": "Get Key Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Get Document Meta-Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88be4c3f-e712-4075-9a19-ffc39354502c",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check the correct document ID is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get('documentId'));",
									"});",
									"",
									"pm.test(\"Check the correct document name is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('test-file.txt');",
									"});",
									"",
									"pm.test(\"Check that a document version is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('documentVersions');",
									"    pm.expect(jsonData.documentVersions[0]).to.have.property('id');",
									"    pm.environment.set(\"documentVersionId\", jsonData.documentVersions[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Latest Document Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4278aa2f-ac57-4bf4-bb5d-5d6d3ede762f",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/download",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3769c37-5256-4fab-8ffa-6730fa42770f",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file2.txt"
								},
								{
									"key": "description",
									"value": "new description v2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						},
						"description": "Updates a document identified by it's UUID."
					},
					"response": []
				},
				{
					"name": "Download Document Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4278aa2f-ac57-4bf4-bb5d-5d6d3ede762f",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/versions/{{documentVersionId}}/download",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"versions",
								"{{documentVersionId}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDocuments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1030e90e-db70-42e8-8e52-4b7914d4d61e",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/?page=0&size=10",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ade50be5-6a79-431e-9aca-57e138d18d09",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"tag\": \"test-tag-1\"\n\t},\n\t{\n\t\t\"tag\": \"test-tag-2\"\n\t},\n\t{\n\t\t\"tag\": \"test-tag-3\"\n\t}\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"tags"
							]
						},
						"description": "Creates document tags for a given document."
					},
					"response": []
				},
				{
					"name": "Get Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aac0023c-a766-479c-b84b-414feb093526",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/tags?page=0&size=10",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Document Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c0df3ee-d5eb-49d1-9c24-ee2f52117f86",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"tags"
							]
						},
						"description": "Deletes all tags assigned to a document."
					},
					"response": []
				},
				{
					"name": "Create Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7285df48-34aa-4aff-bf22-7bb4dc836fad",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set attribute ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"attributeId\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test-name-one\",\n\t\"validationRegex\": \"[a-y]\"\n}"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/attributes",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"attributes"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAttribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "082349e2-73be-4127-bf92-3e66e9fd8ae8",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/attributes/{{attributeId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"attributes",
								"{{attributeId}}"
							]
						},
						"description": "Gets a document attribute by it's ID."
					},
					"response": []
				},
				{
					"name": "Update Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ba36d54-dbce-4427-946e-6c173a9d38a8",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test-name-updated\",\n\t\"validationRegex\": \"[a-z]\"\n}"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/attributes/{{attributeId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"attributes",
								"{{attributeId}}"
							]
						},
						"description": "Updates an individual attribute."
					},
					"response": []
				},
				{
					"name": "GetAttributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "becf1d9b-b8e7-48e5-bea9-32ea17b15592",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/attributes?page=0&size=5",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"attributes"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						},
						"description": "Gets lists of attributes."
					},
					"response": []
				},
				{
					"name": "CreateDocumentAttribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c93677a-d50d-493f-a7da-16086903e803",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"value\": \"test-attribute-value-one\"\n}"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/versions/{{documentVersionId}}/attributes/{{attributeId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"versions",
								"{{documentVersionId}}",
								"attributes",
								"{{attributeId}}"
							]
						},
						"description": "Assigns an attribute to a document."
					},
					"response": []
				},
				{
					"name": "Update Document Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8f304a2-b686-40e7-8268-f348b74cbb93",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"value\": \"doc-attribute-val-updated\"\n}"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/versions/{{documentVersionId}}/attributes/{{attributeId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"versions",
								"{{documentVersionId}}",
								"attributes",
								"{{attributeId}}"
							]
						},
						"description": "Updates the state of a Document Attribute."
					},
					"response": []
				},
				{
					"name": "Delete Document Atribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55ba2de8-347a-48db-8207-eaf98080e217",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/versions/{{documentVersionId}}/attributes/{{attributeId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"versions",
								"{{documentVersionId}}",
								"attributes",
								"{{attributeId}}"
							]
						},
						"description": "Deletes a document attribute."
					},
					"response": []
				},
				{
					"name": "Update Document Name and Desc",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e6c0b18f-384d-46b4-a2aa-208d79f80513",
								"exec": [
									"pm.environment.set(\"newDocName\", \"DocName_\"+ _.random(1, 100000) + \".txt\");",
									"pm.environment.set(\"newDocDesc\", \"DocDesc_\"+ _.random(1, 100000) );"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "16e13b98-a6a3-4281-8e0b-0b23bb5dc4e2",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check the correct document ID is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get('documentId'));",
									"});",
									"",
									"pm.test(\"Check the correct document name is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get('newDocName'));",
									"});",
									"",
									"pm.test(\"Check the correct document desc is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).to.eql(pm.environment.get('newDocDesc'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n\t\"name\" : \"{{newDocName}}\",\n\t\"description\" : \"{{newDocDesc}}\"\n}"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/info",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Document Name for Non-Exist documentId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8805a1b2-a513-4466-92c8-2a15643f4888",
								"exec": [
									"pm.environment.set(\"newDocName\", \"newDocName.txt\");",
									"pm.environment.set(\"wrongdocumentId\", \"ffffffff-ffff-ffff-ffff-ffffffffffff\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b2f1f12c-b3bd-4415-aa69-e2d625963ecc",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n\t\"name\" : \"{{newDocName}}\"\n}"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{wrongdocumentId}}/info",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{wrongdocumentId}}",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7f20b06-8a48-4d3d-8ac0-60828815a3cd",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('isArchived');",
									"    pm.environment.set(\"documentId\", jsonData.id);",
									"    pm.expect(jsonData.isArchived).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/archive",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unarchive document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3cd3406-284d-478e-a034-95d9f4b7b382",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('isArchived');",
									"    pm.environment.set(\"documentId\", jsonData.id);",
									"    pm.expect(jsonData.isArchived).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/unarchive",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"unarchive"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3a306103-019b-4182-a0d8-323ee0d4940f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c7c01eaf-ff7e-4064-af9a-6b02492458a2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "rollback-feature",
			"item": [
				{
					"name": "Get Key Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 1 ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "test initial description.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Update Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3769c37-5256-4fab-8ffa-6730fa42770f",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file2.txt"
								},
								{
									"key": "description",
									"value": "new description v2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						},
						"description": "Updates a document identified by it's UUID."
					},
					"response": []
				},
				{
					"name": "Update Document 2th time",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3769c37-5256-4fab-8ffa-6730fa42770f",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file3.txt"
								},
								{
									"key": "description",
									"value": "new description v2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						},
						"description": "Updates a document identified by it's UUID."
					},
					"response": []
				},
				{
					"name": "Get Document metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57593f8c-cb27-4266-b17b-1fa8a7b0ece9",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check the correct document ID is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get('documentId'));",
									"});",
									"",
									"",
									"pm.test(\"Check that a document version is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('documentVersions');",
									"    pm.expect(3).to.equal(jsonData.documentVersions.length);",
									"    pm.expect(jsonData.documentVersions[1]).to.have.property('id');",
									"    pm.environment.set(\"documentVersionId\", jsonData.documentVersions[1].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RollBack Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70d456c4-a201-4648-ab03-5bf0b751b170",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Checking if properties returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('checksum');",
									"    pm.expect(jsonData).to.have.property('createdDateTime');",
									"    pm.environment.set(\"rolledbackversionId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}/versions/{{documentVersionId}}/rollback",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}",
								"versions",
								"{{documentVersionId}}",
								"rollback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Document metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57593f8c-cb27-4266-b17b-1fa8a7b0ece9",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check the correct document ID is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get('documentId'));",
									"});",
									"",
									"",
									"pm.test(\"Check that a document version is returned.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('documentVersions');",
									"    pm.expect(4).to.equal(jsonData.documentVersions.length);",
									"    pm.expect(jsonData.documentVersions[0].id).to.eql(pm.environment.get('rolledbackversionId'));",
									"    pm.expect(jsonData.documentVersions[2].checksum).to.equal(jsonData.documentVersions[0].checksum);",
									"    pm.expect(jsonData.documentVersions[1].checksum).to.not.equal(jsonData.documentVersions[0].checksum);",
									"    pm.expect(jsonData.documentVersions[3].checksum).to.not.equal(jsonData.documentVersions[0].checksum);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "unsharing-feature",
			"item": [
				{
					"name": "Get Key Session Token for user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fbd50411-4d86-41b9-a69d-1f7f1360641c",
								"exec": [
									" ",
									" pm.environment.set(\"test_session\", _.random(1, 50000000));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 1 by user 1 ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_1\", jsonData.id);",
									"    ",
									"    pm.environment.set(\"user_uuid_1\", jsonData.updatedBy);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 1 by user 1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fbd50411-4d86-41b9-a69d-1f7f1360641c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin2",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 2 by user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_2\", jsonData.id);",
									"    ",
									"    pm.environment.set(\"user_uuid_2\", jsonData.updatedBy);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 1 by user 1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fbd50411-4d86-41b9-a69d-1f7f1360641c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin3",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 3 by user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_3\", jsonData.id);",
									"    ",
									"    pm.environment.set(\"user_uuid_3\", jsonData.updatedBy);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 1 by user 1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Share document 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc0f3ab4-bcd8-4c0e-b0da-44cb0c8d0caf",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"teamflag\": false,\n    \"uuid\": \"{{user_uuid_2}}\",\n    \"permissions\": [\n      \"READ\",\"ARCHIVE\"\n    ]\n  }\n \n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_3}}/share",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_3}}",
								"share"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fbd50411-4d86-41b9-a69d-1f7f1360641c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin2",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Share document 3 ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "582b52e6-66e7-45a4-8ac6-d1087093cdfe",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"teamflag\": false,\n    \"uuid\": \"{{user_uuid_1}}\",\n    \"permissions\": [\n     \"READ\",\"ARCHIVE\"\n    ]\n  }\n \n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_3}}/share",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_3}}",
								"share"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fbd50411-4d86-41b9-a69d-1f7f1360641c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin3",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnShare permission from document 3  ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "726bd898-c887-4648-9a68-1468de281aec",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"teamflag\": false,\n    \"uuid\": \"{{user_uuid_2}}\",\n    \"permissions\": [\n     \"ARCHIVE\"\n    ]\n  }\n \n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_3}}/unshare",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_3}}",
								"unshare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get document 3 lifetime",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_3}}/lifetime/{{user_uuid_1}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_3}}",
								"lifetime",
								"{{user_uuid_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get document 3 lifetime users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_3}}/lifetime",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_3}}",
								"lifetime"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "sharing-feature",
			"item": [
				{
					"name": "Get Key Session Token for user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fbd50411-4d86-41b9-a69d-1f7f1360641c",
								"exec": [
									" ",
									" pm.environment.set(\"test_session\", _.random(1, 50000000));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 1 by user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_1\", jsonData.id);",
									"    ",
									"    pm.environment.set(\"user_uuid_1\", jsonData.updatedBy);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 1 by user 1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Add tag to the document 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"{{test_session}}\"\n  }\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_1}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_1}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin2",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 2 by user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_2\", jsonData.id);",
									"    ",
									"    pm.environment.set(\"user_uuid_2\", jsonData.updatedBy);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 2 by user 2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Add tag to the document 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"{{test_session}}\"\n  }\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_2}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_2}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin3",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 3 by user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_3\", jsonData.id);",
									"    ",
									"    pm.environment.set(\"user_uuid_3\", jsonData.updatedBy);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 3 by user 3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Add tag to the document 3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"{{test_session}}\"\n  }\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_3}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_3}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 4 by user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_4\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 4 by user 3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Add tag to the document 4",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"{{test_session}}\"\n  }\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_4}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_4}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document 5 by user 3 ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51412238-8f3f-4aff-bad4-30646a88a647",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set document ID environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set(\"documentId_5\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "test-file.txt"
								},
								{
									"key": "description",
									"value": "doc 5 by user 3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							]
						},
						"description": "Creates a new document on the service."
					},
					"response": []
				},
				{
					"name": "Add tag to the document 5",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"tag\": \"{{test_session}}\"\n  }\n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_5}}/tags",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_5}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a305b2c9-a2cd-44eb-a26f-dd94892eaed7",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(3).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 3 shared with others",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3b8cccb-5e11-4dae-9591-980f0ecbb5e3",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(0).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}&filterSharedWithOthers=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								},
								{
									"key": "filterSharedWithOthers",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share document 5 with user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa90f235-ba7c-4384-8188-c60c119e9bf4",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"teamflag\": false,\n    \"uuid\": \"{{user_uuid_2}}\",\n    \"permissions\": [\n      \"READ\",\"ARCHIVE\"\n    ]\n  }\n \n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_5}}/share",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_5}}",
								"share"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 3 shared with others",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f63abef-337b-42f8-be1f-2bb4007d5855",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(1).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}&filterSharedWithOthers=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								},
								{
									"key": "filterSharedWithOthers",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share document 5 with user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa90f235-ba7c-4384-8188-c60c119e9bf4",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"teamflag\": false,\n    \"uuid\": \"{{user_uuid_1}}\",\n    \"permissions\": [\n      \"READ\",\"ARCHIVE\"\n    ]\n  }\n \n]"
						},
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents/{{documentId_5}}/share",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents",
								"{{documentId_5}}",
								"share"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 3 shared with me",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b01c4c3-c186-4346-996b-89cfbc22dce4",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(0).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}&filterSharedWithMe=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								},
								{
									"key": "filterSharedWithMe",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 3 shared with others ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8273041e-5f6b-4656-afd6-8f601b5c6dc1",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(2).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}&filterSharedWithOthers=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								},
								{
									"key": "filterSharedWithOthers",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin2",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 2 shared with me ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50cdad9e-32a7-4d2f-9c8b-8908a6db0d58",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(1).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}&filterSharedWithMe=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								},
								{
									"key": "filterSharedWithMe",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Session Token for user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c5b79eb-dff1-4dee-bfda-9da489ae5edb",
								"exec": [
									"pm.test(\"Set session_access_token environment variable.\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set(\"session_access_token\", jsonData.access_token);",
									"    pm.expect(jsonData.access_token.length).to.be.above(12);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "dokuti-admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1#",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "dokuti-test-client",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dokuti",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth-server-base-url}}/connect/token",
							"host": [
								"{{auth-server-base-url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 1 shared with me  ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7bc63d8-a8f6-4568-b8b4-bbab27ed3620",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(1).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}&filterSharedWithMe=true",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								},
								{
									"key": "filterSharedWithMe",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Documents by user 1 ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7bc63d8-a8f6-4568-b8b4-bbab27ed3620",
								"exec": [
									"pm.test(\"Response is OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(2).to.equal(jsonData.length);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{DOKUTI_BASE_URL}}/documents?filterTags={{test_session}}",
							"host": [
								"{{DOKUTI_BASE_URL}}"
							],
							"path": [
								"documents"
							],
							"query": [
								{
									"key": "filterTags",
									"value": "{{test_session}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0a4eebf8-13bf-42ae-bf14-c4f8cae1a1d1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6aa888b8-1fb4-41b6-af86-3fc3198087a1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{session_access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ce91e9fb-b99d-4664-9c2b-0a5909f97bf7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e0aa9414-7239-4336-a5ac-71a580d87b4f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "edf15f57-8756-4d20-baa1-82bb8438510d",
			"key": "session_access_token",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}
